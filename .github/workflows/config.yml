name: Django CI/CD

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

env:
  DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
  DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}
  DOCKERHUB_REPO: ${{ secrets.DOCKERHUB_REPO }}
  IMAGE_NAME: ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKERHUB_REPO }}:${{ github.sha }}

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.8, 3.9]

    env:
      MODE: ${{ secrets.MODE }}

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Flake8 and Dependencies
        run: |
          pip install --upgrade pip
          pip install -r ./requirements.txt
          pip install flake8

      - name: Lint with flake
        run: flake8 .
      - name: Run Tests
        run: |
          python manage.py test

  build-image:
    needs: [ build ]
    if: ${{ github.ref == 'refs/heads/main'}}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Build docker image
        run: |
          docker build -t ${{ env.IMAGE_NAME }} .
          docker save -o docker-image.tar ${{ env.IMAGE_NAME }}
      - uses: actions/upload-artifact@v3
        with:
          name: p13docker
          path: docker-image.tar

  push-image:
    needs: build-image
    if: ${{ github.ref == 'refs/heads/main'}}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: p13docker

      - name: Push docker image
        run: |
          docker load -i docker-image.tar
          docker login -u ${{ env.DOCKERHUB_USERNAME }} -p ${{ env.DOCKERHUB_PASSWORD }}
          docker push ${{ env.IMAGE_NAME }}

      - name: Collect static files
        run: python manage.py collectstatic --noinput

      - name: Apply database migrations
        run: python manage.py migrate

  deploy:
    runs-on: ubuntu-latest
    name: deploy
    needs: [build]
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - uses: akhileshns/heroku-deploy@v3.12.14
        with:
          heroku_api_key: ${{ secrets.HEROKU_API_KEY }}
          heroku_app_name: ${{ secrets.HEROKU_APP_NAME }}
          heroku_email: "emery.kroquet@gmail.com"
          branch: "main"

  deploy-heroku:
    needs: push-image
    if: ${{ github.ref == 'refs/heads/main'}}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Deploy docker image
        env:
          IMAGE_NAME: oc_lettings_site
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
          HEROKU_APP_NAME: ${{ secrets.HEROKU_APP_NAME }}
        run: |
          docker build -t ${{ env.IMAGE_NAME }} .
          docker tag ${{ env.IMAGE_NAME }} registry.heroku.com/${{ env.HEROKU_APP_NAME }}/web
          echo ${{ env.HEROKU_API_KEY }}
          docker login -u _ -p ${{ env.HEROKU_API_KEY }} registry.heroku.com
          docker push registry.heroku.com/${{ env.HEROKU_APP_NAME }}/web
          heroku container:release web -a ${{ env.HEROKU_APP_NAME }}
